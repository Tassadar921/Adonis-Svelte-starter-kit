services:
    db:
        image: postgres:latest
        container_name: db
        restart: always
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        volumes:
            - postgres_data:/var/shared/postgresql/data

    redis:
        image: redis:latest
        container_name: redis
        restart: always

    backend:
        build:
            context: .
            dockerfile: ./Dockerfile.back.dev
            args:
                PORT: ${PORT}
        container_name: back
        restart: always
        env_file: ./back/.env
        working_dir: /app
        volumes:
            - ./back:/app
            - /app/node_modules
        ports:
            - '${PORT}:${PORT}'
        depends_on:
            - db
            - redis

    frontend:
        build:
            context: .
            dockerfile: ./Dockerfile.front.dev
            args:
                PORT: ${FRONT_PORT}
        container_name: front
        restart: always
        env_file: ./front/.env
        working_dir: /app
        user: "node"
        environment:
            - WATCHPACK_POLLING=true
            - VITE_PORT=${FRONT_PORT}
            - VITE_FRONT_URI=http://localhost:${FRONT_PORT}
            - VITE_API_BASE_URI=http://localhost:${PORT}
            - VITE_GITHUB_REPOSITORY=${GITHUB_REPOSITORY}
        volumes:
            - ./front/src:/app/src
            - ./front/static:/app/static
            - ./front/app.html:/app/app.html
            - /app/node_modules
            - /app/.svelte-kit
        ports:
            - '${FRONT_PORT}:${FRONT_PORT}'
        depends_on:
            - backend

    adminer:
        image: ghcr.io/shyim/adminerevo:latest
        container_name: adminer
        restart: always
        ports:
            - '8080:8080'
        depends_on:
            - db

volumes:
    postgres_data:
